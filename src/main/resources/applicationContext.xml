<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
	        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
	        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">


	<context:annotation-config />
	<context:component-scan base-package="com.why.*" />

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<!-- 
				<value>${admin.config}</value>
				 -->
			</list>
		</property>
	</bean>

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:${db.properties}</value>
				<value>classpath:${platform.properties}</value>
				<value>classpath:${jdbc.properties}</value>
			</list>
		</property>
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
	</bean>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="jdbcUrl">
			<value>${jdbc.url}</value>
		</property>
		<property name="driverClass">
			<value>${jdbc.driverClassName}</value>
		</property>
		<property name="user">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<property name="minPoolSize">
			<value>5</value>
		</property>
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize">
			<value>20</value>
		</property>
		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize">
			<value>5</value>
		</property>
		<property name="acquireIncrement">
			<value>5</value>
		</property>
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime">
			<value>60</value>
		</property>
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod">
			<value>10800</value>
		</property>
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts">
			<value>5</value>
		</property>
	</bean>


	<import resource="classpath:${repo.config}" />
	<!--<import resource="classpath:scheduleJobs.xml"/>-->

	<!--
		<bean id="jdbcSqlRepo" class="com.hoolai.sango.repo.JdbcSqlRepoImpl"/>
		<bean id="probabilityGenerator" class="com.hoolai.sango.bo.ProbabilityGeneratorImpl"/>
	-->

	<!--
		<bean id="probabilityGenerator" class="com.hoolai.sango.bo.ProbabilityGeneratorImpl" scope="request">
		<aop:scoped-proxy/></bean>
	-->

	<bean id="pConfig" class="com.hoolai.platform.Config">
		<constructor-arg index="0" type="long" value="${app_id}" />
		<constructor-arg index="1" type="java.lang.String" value="${app_name}" />
		<constructor-arg index="2" type="java.lang.String" value="${api_key}" />
		<constructor-arg index="3" type="java.lang.String" value="${api_url}" />
		<constructor-arg index="4" type="java.lang.String" value="${pay_url}" />
	</bean>

	<bean id="platformService" class="com.hoolai.platform.service.PlatformServiceFactory" factory-method="newInstance">
		<constructor-arg index="0" type="com.hoolai.platform.PlatformType" value="${platform_sdk_type}" />
		<constructor-arg index="1" type="com.hoolai.platform.Config" ref="pConfig" />
	</bean>

	<bean id="tencentPaymentService" class="com.hoolai.platform.service.tencent.TencentPaymentService">
		<constructor-arg index="0" type="com.hoolai.platform.Config"
			ref="pConfig"></constructor-arg>
	</bean>

	<!-- 
	<bean id="callPolicy" class="java.util.concurrent.ThreadPoolExecutor$DiscardPolicy"/>
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="4" />
		<property name="maxPoolSize" value="300" />
		<property name="queueCapacity" value="1000" />
		<property name="rejectedExecutionHandler" ref="callPolicy"></property>
	</bean>
	 -->

	<!--
	<import resource="classpath:/spring/admin.xml"/>
	<import resource="classpath:/spring/security.xml"/>
	<import resource="classpath:/spring/task.xml"/>
	-->

</beans>